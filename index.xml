<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rémi Génin</title>
    
    
    
    <link>https://remi-genin.github.io/</link>
    <description>Recent content on Rémi Génin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Jan 2022 15:12:16 -0500</lastBuildDate>
    
	<atom:link href="https://remi-genin.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Screen Space Planar Reflections in Ghost Recon Wildlands</title>
      <link>https://remi-genin.github.io/posts/screen-space-planar-reflections-in-ghost-recon-wildlands/</link>
      <pubDate>Mon, 31 Jan 2022 15:12:16 -0500</pubDate>
      
      <guid>https://remi-genin.github.io/posts/screen-space-planar-reflections-in-ghost-recon-wildlands/</guid>
      <description>
        
          
          
          
        
        
        
          Reflections done in screen-space #  The screen space reflections algorithm (SSR) is a technology now used in numerous video games to provide the reflection visuals. They are expected to be less expensive than actual reflection rendering and more accurate than cubemap-based reflections, as long as the reflection source is present on the screen. Still, this technology isn’t that affordable in a realtime application and it suffers from a lot of graphic caveats: SSR isn’t the final solution to the reflection inputs.
          
        
        </description>
    </item>
    
  </channel>
</rss>